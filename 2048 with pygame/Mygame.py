# -*- coding: utf-8 -*-
"""2048.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SXlEku0A6-F-79mrYIoKIfvWWvcvacM-

2048 Game
"""

import random

class games():
  def __init__(self):
    self.arrs=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]
    self.flag=0
  
  def print_game(self):
    for i in self.arrs:
      print(i)
  
  def check_over(self):
    for i in range(3):
      for j in range(4):
        if (self.arrs[i][j]==2048 or self.arrs[i+1][j]==2048):
          #print("You Won")
          return 2
        if ((self.arrs[i][j]==self.arrs[i+1][j]) or self.arrs[i][j]==0):
          return 0
       
    for i in range(4):
      for j in range(3):
        if ((self.arrs[i][j]==self.arrs[i][j+1]) or self.arrs[i][j]==0):
          return 0
    if (self.arrs[3][3]==0):
      return 0
    #print("Game Over")
    return 1    
  
  def check_empty(self):
    empty_list=[]
    for i in range(4):
      for j in range(4):
        if self.arrs[i][j]==0:
          temp=[i,j]
          empty_list.append(temp)
    return empty_list
 
  def new_random(self):
    tem=self.check_empty()
    new=random.randint(0,len(tem)-1)
   
    self.arrs[tem[new][0]][tem[new][1]]=random.choice([2,2,4])
 
    #============================================================
  def close(self):
    for i in range(4):
      t=[]
      for j in range(4):
        if(self.arrs[3-j][i] !=0):
          t.append(self.arrs[3-j][i])
      
      if (len(t)==3):
        if (self.arrs[0][i]!=0):
          self.flag=1
      elif (len(t)==2):
        if (self.arrs[0][i]!=0 or self.arrs[1][i]!=0):
          self.flag=1
      elif (len(t)==1):
        if (self.arrs[3][i]==0):
          self.flag=1
      
      index=3
      for new in t:
        self.arrs[index][i]=new
        index-=1
      while(index>=0):
        self.arrs[index][i]=0
        index-=1
  def combine(self):
    for i in range(4):
      for j in range(3,-1,-1):
        if(self.arrs[j][i]==self.arrs[j-1][i]):
          self.arrs[j][i]=2*self.arrs[j][i]
          self.arrs[j-1][i]=0
  
  def reverse(self):
    new_arr=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]
    for i in range(4):
      for j in range(4):
        new_arr[j][i]=self.arrs[3-j][i]
    self.arrs=new_arr
  
  def transpose(self):
    new_arr=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]
    for i in range(4):
      for j in range(4):
        new_arr[j][i]=self.arrs[i][j]
    self.arrs=new_arr
  
 
#====================================================================
 
  def move_down(self):
    self.close()
    self.combine()
    self.close()
    
  def move_up(self):
    self.reverse()
    self.close()
    self.combine()
    self.close()
    self.reverse()
    
  def move_right(self):
    
    self.transpose()
    self.close()
    self.combine()
    self.close()
    self.transpose()
  
  def move_left(self):
    self.transpose()
    self.reverse()
    self.close()
    self.combine()
    self.close()
    self.reverse()
    self.transpose()

